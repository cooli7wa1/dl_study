--- ./tmp_file	2018-04-13 21:21:39.059141356 +0800
+++ /home/cooli7wa/ost1/official_release/2018_4_13_6763_o_v01_stable_2.7.0/Android/alps/./vendor/mediatek/proprietary/trustzone/atf/v1.3/Makefile	2018-04-13 09:13:59.057139438 +0800
@@ -63,26 +63,34 @@
 SPD				:= none
 ifeq (${SECURE_OS},tbase)
 SPD				:= tbase
 endif
 ifeq (${SECURE_OS},mtee)
 SPD				:= mtee
 endif
 ifeq (${SECURE_OS},trusty)
 SPD				:= trusty
 endif
+ifeq (${SECURE_OS},teeid)
+SPD				:= teeid
+TF_CFLAGS += -DMICROTRUST_ATF_VERSION=$(VERSION_MAJOR)$(VERSION_MINOR)
+ASFLAGS += -DMICROTRUST_ATF_VERSION=$(VERSION_MAJOR)$(VERSION_MINOR)
+endif
 # The AArch32 Secure Payload to be built as BL32 image
 AARCH32_SP			:= none
 # Base commit to perform code check on
 BASE_COMMIT			:= origin/master
 # NS timer register save and restore
 NS_TIMER_SWITCH			:= 0
+ifeq (${SECURE_OS},teeid)
+NS_TIMER_SWITCH			:= 1
+endif
 # By default, BL1 acts as the reset handler, not BL31
 RESET_TO_BL31			:= 0
 # Include FP registers in cpu context
 CTX_INCLUDE_FPREGS		:= 0
 # Build flag to include AArch32 registers in cpu context save and restore
 # during world switch. This flag must be set to 0 for AArch64-only platforms.
 CTX_INCLUDE_AARCH32_REGS	:= 1
 # Determine the version of ARM GIC architecture to use for interrupt management
 # in EL3. The platform port can change this value if needed.
 ARM_GIC_ARCH			:= 2
@@ -196,20 +204,23 @@
 endif
 VERSION_STRING		:=	v${VERSION_MAJOR}.${VERSION_MINOR}(${BUILD_TYPE}):${BUILD_STRING}
 
 # The cert_create tool cannot generate certificates individually, so we use the
 # target 'certificates' to create them all
 ifneq (${GENERATE_COT},0)
         FIP_DEPS += certificates
         FWU_FIP_DEPS += fwu_certificates
 endif
 
+ifeq (${SECURE_OS},teeid)
+TF_CFLAGS += -DCFG_MICROTRUST_TEE_SUPPORT=1
+endif
 # For AArch32, enable new version of image loading.
 ifeq (${ARCH},aarch32)
         LOAD_IMAGE_V2	:=	1
 endif
 
 ################################################################################
 # Toolchain
 ################################################################################
 
 CC			:=	${CROSS_COMPILE}gcc
@@ -235,20 +246,23 @@
 TF_CFLAGS		+= 	-nostdinc -ffreestanding -Wall			\
 				-Werror -Wmissing-include-dirs			\
 				-std=c99 -c -Os					\
 				$(TF_CFLAGS_$(ARCH))				\
 				${DEFINES} ${INCLUDES}
 TF_CFLAGS		+=	-ffunction-sections -fdata-sections
 
 LDFLAGS			+=	--fatal-warnings -O1
 LDFLAGS			+=	--gc-sections
 
+ifeq (${MICROTRUST_TUI_SUPPORT},yes)
+CFLAGS += -DTUI_SUPPORT
+endif
 
 #ifneq (${SECURE_OS},teeid)
 ASFLAGS += -Werror
 TF_CFLAGS += -Werror
 #endif
 
 ################################################################################
 # Common sources and include directories
 ################################################################################
 include lib/stdlib/stdlib.mk
